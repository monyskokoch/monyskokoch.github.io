body {
  font-family: 'Poppins', sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100vh;
  margin: 0;
  background-color: #F8F9FA;
  overflow: hidden;
}

h1 {
  margin-bottom: 20px;
  font-weight: 700;
  color: #6C757D;
  text-transform: uppercase;
  letter-spacing: 5px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

#game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

#background-pattern {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to right, #E2E2E2 1px, transparent 1px),
                    linear-gradient(to bottom, #E2E2E2 1px, transparent 1px);
  background-size: 10px 10px;
  opacity: 0.2;
  z-index: -1;
}

#grid-container {
  display: grid;
  grid-template-columns: repeat(4, 0fr);
  gap: 10px;
  padding: 10px;
}

.logo-row {
  display: contents;
}

.logo-placeholder {
  width: 80px;
  height: 80px;
}

.logo {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  background-color: #17A2B8;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.logo:before {
  content: '';
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  border-radius: 50%;
  background: linear-gradient(45deg, #17A2B8, #138496);
  opacity: 0.7;
  z-index: -1;
}

.grid-row {
  display: contents;
}

.grid-item {
  width: 80px;
  height: 80px;
  background-color: #ffffff;
  border: none;
  border-radius: 5px;
  padding: 10px;
  font-size: 16px;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
}

.grid-item:hover {
  transform: scale(1.05);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

button {
  margin-top: 20px;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  background-color: #17A2B8;
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
#timer {
  position: absolute;
  top: 20px; /* Adjust the top value to change the vertical position */
  right: 20px; /* Adjust the right value to change the horizontal position */
  text-align: center;
}

#time {
  font-size: 36px;
  font-weight: 700;
  color: #fff;
  background-color: #17A2B8;
  padding: 10px 20px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

#button-container {
  position: absolute;
  top: 316.5px; /* Adjust the top value to move the buttons down */
  right: -275px; /* Adjust the right value to move the buttons to the left or right */
}

#submit-button {
  margin-top: 20px;
  margin-right: 0.25px; /* Add margin-right to create spacing between the buttons */
  padding: 10.3px; /* Adjust padding to make the buttons smaller */
  font-size: 14px; /* Adjust font size to make the buttons smaller */
}

#shuffle-button {
  margin-top: 20px;
  padding: 10.3px; /* Adjust padding to make the buttons smaller */
  font-size: 14px; /* Adjust font size to make the buttons smaller */
}

button:hover {
  background-color: #138496;
  box-shadow: 0 5px Certainly! Here's the modified JavaScript code that incorporates the team assignments and uses the Wikipedia API to check the correctness of the answers:

```javascript
// Define an array of team objects with logo and corresponding team names
let teams = [
  { logo: 'logos/49ers.png', name: 'San Francisco 49ers' },
  { logo: 'logos/bears.png', name: 'Chicago Bears' },
  { logo: 'logos/bengals.png', name: 'Cincinnati Bengals' },
  { logo: 'logos/bills.png', name: 'Buffalo Bills' },
  { logo: 'logos/broncos.png', name: 'Denver Broncos' },
  { logo: 'logos/browns.png', name: 'Cleveland Browns' },
  { logo: 'logos/buccs.png', name: 'Tampa Bay Buccaneers' },
  { logo: 'logos/cardinals.png', name: 'Arizona Cardinals' },
  { logo: 'logos/chargers.png', name: 'Los Angeles Chargers' },
  { logo: 'logos/chiefs.png', name: 'Kansas City Chiefs' },
  { logo: 'logos/colts.png', name: 'Indianapolis Colts' },
  { logo: 'logos/cowboys.png', name: 'Dallas Cowboys' },
  { logo: 'logos/dolphins.png', name: 'Miami Dolphins' },
  { logo: 'logos/eagles.png', name: 'Philadelphia Eagles' },
  { logo: 'logos/falcons.png', name: 'Atlanta Falcons' },
  { logo: 'logos/giants.png', name: 'New York Giants' },
  { logo: 'logos/jaguars.png', name: 'Jacksonville Jaguars' },
  { logo: 'logos/jets.png', name: 'New York Jets' },
  { logo: 'logos/lions.png', name: 'Detroit Lions' },
  { logo: 'logos/packers.png', name: 'Green Bay Packers' },
  { logo: 'logos/panthers.png', name: 'Carolina Panthers' },
  { logo: 'logos/patriots.png', name: 'New England Patriots' },
  { logo: 'logos/raiders.png', name: 'Las Vegas Raiders' },
  { logo: 'logos/rams.png', name: 'Los Angeles Rams' },
  { logo: 'logos/ravens.png', name: 'Baltimore Ravens' },
  { logo: 'logos/saints.png', name: 'New Orleans Saints' },
  { logo: 'logos/seahawks.png', name: 'Seattle Seahawks' },
  { logo: 'logos/steelers.png', name: 'Pittsburgh Steelers' },
  { logo: 'logos/texans.png', name: 'Houston Texans' },
  { logo: 'logos/titans.png', name: 'Tennessee Titans' },
  { logo: 'logos/vikings.png', name: 'Minnesota Vikings' },
  { logo: 'logos/washington.png', name: 'Washington Football Team' },
];

// Shuffle the teams array
teams.sort(() => Math.random() - 0.5);

// Function to assign logos to .logo elements in HTML
function assignLogos() {
  let logoElements = document.querySelectorAll('.logo');
  for (let i = 0; i < logoElements.length; i++) {
    logoElements[i].src = teams[i].logo;
  }
}

// Assign logos on page load
window.onload = assignLogos;

// Function to handle guess submission
async function submitGuesses() {
  let gridItems = document.getElementsByClassName('grid-item');

  for (let i = 0; i < gridItems.length; i++) {
    let playerName = gridItems[i].value.trim();
    let correspondingInputField = gridItems[i];
    let team1 = teams[i].name;
    let team2 = teams[i + 1].name;

    if (playerName !== '') {
      try {
        const response = await fetch(
          `https://en.wikipedia.org/w/api.php?action=query&format=json&prop=revisions&titles=${encodeURIComponent(
            playerName
          )}&rvprop=content&rvslots=*`
        );
        const data = await response.json();
        const pages = data.query.pages;
        const pageId = Object.keys(pages)[0];

        if (pageId !== '-1') {
          const pageContent = pages[pageId].revisions[0].slots.main.content;

          if (pageContent.includes(team1) && pageContent.includes(team2)) {
            correspondingInputField.style.backgroundColor = 'green';
          } else {
            correspondingInputField.style.backgroundColor = 'red';
          }
        }
      } catch (error) {
        console.log(
          'An error occurred while fetching data from the Wikipedia API:',
          error
        );
      }
    }
  }
}
